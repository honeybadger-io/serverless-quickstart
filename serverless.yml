# This file is the main config file for your service.
#
# For full config options, check the docs:
#    docs.serverless.com

service: serverless-quickstart

plugins:
  # This plugin is optional, but  makes it much easier to use AWS metadata in this config file.
  # If you find yourself using ugly syntax like "Fn::Join", check it out.
  # For usage info: https://www.npmjs.com/package/serverless-pseudo-parameters
  - serverless-pseudo-parameters

custom:
  stage: ${opt:stage, self:provider.stage}
  profile:
    production: "default"
    dev: "honeybadger-dev"

package:
  exclude:
    - tests/**

provider:
  name: aws
  stage: dev
  profile: ${self:custom.profile.${self:custom.stage}}
  runtime: nodejs12.x
  timeout: 20
  memorySize: 256

# you can add statements to the Lambda function's IAM Role here
# iamRoleStatements:
#   - Effect: "Allow"
#     Action:
#       - "s3:ListBucket"
#     Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#   - Effect: "Allow"
#     Action:
#       - "s3:PutObject"
#     Resource:
#       Fn::Join:
#         - ""
#         - - "arn:aws:s3:::"
#           - "Ref" : "ServerlessDeploymentBucket"
#           - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

functions:
  greet:
    handler: functions/greet.handler
#
#   The following are a few example events you can configure
#   NOTE: Please make sure to change your handler code to work with those events
#   Check the event documentation for details
#
#   events:
#     - http:
#         path: users/create
#         method: get
#     - s3: ${env:BUCKET}
#     - schedule: rate(10 minutes)
#     - sns: greeter-topic
#     - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#     - alexaSkill: amzn1.ask.skill.xx-xx-xx-xx
#     - alexaSmartHome: amzn1.ask.skill.xx-xx-xx-xx
#     - iot:
#         sql: "SELECT * FROM 'some_topic'"
#     - cloudwatchEvent:
#         event:
#           source:
#             - "aws.ec2"
#           detail-type:
#             - "EC2 Instance State-change Notification"
#           detail:
#             state:
#               - pending
#     - cloudwatchLog: '/aws/lambda/hello'
#     - cognitoUserPool:
#         pool: MyUserPool
#         trigger: PreSignUp


#
# You can add CloudFormation resource templates here
#
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
